{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./app/ProxyXMLHttpRequest.js","webpack:///./app/index.js"],"names":["realXhr","handler","get","target","propKey","receiver","construct","args","ProxyXMLHttpRequest","Proxy","XMLHttpRequest","xhr","open","onreadystatechange","readyState","DONE","status","console","log","responseText","send"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA,IAAMA,OAAO,GAAG,oBAAhB;AACA,IAAIC,OAAO,GAAG;AACVC,KAAG,EAAE,aAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA+B;AAChC,WAAOF,MAAM,CAACC,OAAD,CAAb;AACH,GAHS;AAIV;AAEA;AACA;AAEA;AACAE,WAAS,EAAE,mBAACH,MAAD,EAASI,IAAT,EAAkB;AACzB,sBAAWJ,MAAX,qBAAqBI,IAArB;AACH;AAZS,CAAd,C,CAeA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGO,IAAMC,mBAAmB,GAAG,IAAIC,KAAJ,CAAUC,cAAV,EAA0BT,OAA1B,CAA5B,C,CAEP;AACA;AACA,I;;;;;;;;;;;;AClGA;AAAA;AAAA;AACA;AACA;AACA;AACA;CAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA,IAAMU,GAAG,GAAG,IAAID,cAAJ,EAAZ;AACAC,GAAG,CAACC,IAAJ,CAAS,KAAT,EAAgB,8BAAhB,EAAgD,IAAhD;;AACAD,GAAG,CAACE,kBAAJ,GAAyB,YAAY;AACjC,MAAIF,GAAG,CAACG,UAAJ,KAAmBJ,cAAc,CAACK,IAAlC,IAA0CJ,GAAG,CAACK,MAAJ,KAAe,GAA7D,EAAkE;AAC9DC,WAAO,CAACC,GAAR,CAAYP,GAAG,CAACQ,YAAhB;AACH;AACJ,CAJD;;AAKAR,GAAG,CAACS,IAAJ,G","file":"proxy.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/index.js\");\n","const realXhr = \"RealXMLHttpRequest\"\r\nlet handler = {\r\n    get: (target, propKey, receiver) => {\r\n        return target[propKey]\r\n    },\r\n    // set: (target, propKey, value, receiver) => {\r\n\r\n    // },\r\n    // apply: (target, thisArg, argumentsList) => {\r\n\r\n    // },\r\n    construct: (target, args) => {\r\n        return new target(...args);\r\n    }\r\n}\r\n\r\n// class ProxyXMLHttpRequest {\r\n//     constructor() {\r\n//         this._initXMLHttpRequest()\r\n//     }\r\n\r\n//     _initXMLHttpRequest() {\r\n\r\n//         const xhr = new Proxy(new window[realXhr], {\r\n//             get: function (target, property, receiver) {\r\n//                 console.log(`property get: ${property}`)\r\n//                 return target[property]\r\n//             },\r\n//             set: function (target, property, value, receiver) {\r\n//                 target[property] = value;\r\n//                 console.log('property set: ' + property + ' = ' + value);\r\n//                 return true;\r\n//             }\r\n//         })\r\n\r\n//         // for (let attr in xhr) {\r\n//         //     const type = typeof xhr[attr]\r\n\r\n//         //     if (type === \"function\") {\r\n//         //         this[attr] = this.hookFunction(attr);\r\n//         //     } else {\r\n//         //         Object.defineProperty(this, attr, {\r\n//         //             get: this.getterFactory(attr),\r\n//         //             set: this.setterFactory(attr),\r\n//         //             enumerable: true\r\n//         //         })\r\n//         //     }\r\n//         // }\r\n//         this.xhr = xhr;\r\n//     }\r\n\r\n//     hookFunction(fun) {\r\n//         return function () {\r\n//             const args = [].slice.call(arguments)\r\n//             if (proxy[fun] && proxy[fun].call(this, args, this.xhr)) {\r\n//                 return\r\n//             }\r\n//             return this.xhr[fun].apply(this.xhr, args);\r\n//         }\r\n//     }\r\n\r\n//     getterFactory(attr) {\r\n//         return function () {\r\n//             const v = this.hasOwnProperty(attr + \"_\") ? this[attr + \"_\"] : this.xhr[attr];\r\n//             const attrGetterHook = (proxy[attr] || {})[\"getter\"]\r\n//             return attrGetterHook && attrGetterHook(v, this) || v\r\n//         }\r\n//     }\r\n\r\n//     setterFactory(attr) {\r\n//         return function (v) {\r\n//             const xhr = this.xhr;\r\n//             const that = this;\r\n//             const hook = proxy[attr];\r\n//             if (typeof hook === \"function\") {\r\n//                 // hook  event callbacks such as `onload`、`onreadystatechange`...\r\n//                 xhr[attr] = function () {\r\n//                     proxy[attr](that) || v.apply(xhr, arguments);\r\n//                 }\r\n//             } else {\r\n//                 //If the attribute isn't writable, generate proxy attribute\r\n//                 const attrSetterHook = (hook || {})[\"setter\"];\r\n//                 v = attrSetterHook && attrSetterHook(v, that) || v\r\n//                 try {\r\n//                     xhr[attr] = v;\r\n//                 } catch (e) {\r\n//                     this[attr + \"_\"] = v;\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nexport const ProxyXMLHttpRequest = new Proxy(XMLHttpRequest, handler)\r\n\r\n// export {\r\n//     ProxyXMLHttpRequest\r\n// }","// const pathToRegexp = require('path-to-regexp');\r\n// import pathToRegexp from 'path-to-regexp'\r\n// import ajaxHook from 'ajax-hook'\r\n// import { AjaxHook } from './hook'\r\n// const ajaxHook = require(\"ajax-hook\");\r\nimport { ProxyXMLHttpRequest } from './ProxyXMLHttpRequest'\r\n\r\n// const ajaxHook = new AjaxHook()\r\n\r\n// class Filter {\r\n//     constructor() {\r\n\r\n//     }\r\n\r\n//     init() {\r\n//         ajaxHook.hookAjax({\r\n//             open: (args, xhr) => {\r\n//                 xhr._url = args[1];\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     hook(urlStr, hookObj) {\r\n//         const regexp = pathToRegexp(urlStr)\r\n//         const t = Object.assign({}, hookObj);\r\n//         Object.keys(t).forEach(function (key) {\r\n//             if (typeof t[key] == \"function\") {\r\n//                 t[key] = function () {\r\n//                     console.log(this._url)\r\n//                     if (regexp.exec(this._url)) {\r\n//                         hookObj[key].apply(this, arguments);\r\n//                     }\r\n//                 }\r\n//             }\r\n\r\n//         });\r\n//         if (!t.open) {\r\n//             t.open = function (args, xhr) {\r\n//                 xhr._url = args[1];\r\n//             }\r\n//         } else {\r\n//             let m = t.open\r\n//             t.open = function (args, xhr) {\r\n//                 xhr._url = args[1];\r\n//                 m.apply(this, arguments)\r\n//             }\r\n//         }\r\n\r\n//         ajaxHook.hookAjax(t)\r\n//     }\r\n// }\r\n\r\n// export { Filter }\r\n\r\nconst xhr = new XMLHttpRequest()\r\nxhr.open('GET', 'http://localhost:8999/server', true)\r\nxhr.onreadystatechange = function () {\r\n    if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\r\n        console.log(xhr.responseText)\r\n    }\r\n}\r\nxhr.send()"],"sourceRoot":""}